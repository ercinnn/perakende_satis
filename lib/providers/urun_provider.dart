import 'package:flutter/material.dart';
import '../models/urun_model.dart';

class UrunProvider with ChangeNotifier {
  final List<Urun> _urunler = [];

  // ÃœrÃ¼n listesini dÄ±ÅŸarÄ±ya aÃ§Ä±k hale getir
  List<Urun> get urunler => _urunler;

  // ğŸ”¹ TEK ÃœRÃœN EKLEME
  void urunEkle(Urun yeniUrun) {
    try {
      if (_urunler.any((urun) => urun.barkod == yeniUrun.barkod)) {
        throw Exception('Bu barkodla kayÄ±tlÄ± bir Ã¼rÃ¼n zaten var!');
      }
      _urunler.add(yeniUrun);
      notifyListeners();
    } catch (e) {
      throw Exception('ÃœrÃ¼n eklenirken hata oluÅŸtu: $e');
    }
  }

  // ğŸ”¹ Ã‡OKLU ÃœRÃœN EKLEME (Excel iÃ§in)
  void urunleriEkle(List<Urun> yeniUrunler) {
    try {
      for (var yeniUrun in yeniUrunler) {
        if (_urunler.any((urun) => urun.barkod == yeniUrun.barkod)) {
          continue; // AynÄ± barkod varsa ekleme, devam et
        }
        _urunler.add(yeniUrun);
      }
      notifyListeners();
    } catch (e) {
      throw Exception('ÃœrÃ¼nler eklenirken hata oluÅŸtu: $e');
    }
  }

  // ğŸ”¹ ÃœRÃœN SÄ°LME
  void urunSil(String barkod) {
    try {
      _urunler.removeWhere((urun) => urun.barkod == barkod);
      notifyListeners();
    } catch (e) {
      throw Exception('ÃœrÃ¼n silinirken hata oluÅŸtu: $e');
    }
  }

  // ğŸ”¹ ÃœRÃœN GÃœNCELLEME
  void urunGuncelle(Urun guncellenenUrun) {
    try {
      final index = _urunler.indexWhere((urun) => urun.barkod == guncellenenUrun.barkod);
      if (index == -1) {
        throw Exception('GÃ¼ncellenecek Ã¼rÃ¼n bulunamadÄ±!');
      }
      _urunler[index] = guncellenenUrun;
      notifyListeners();
    } catch (e) {
      throw Exception('ÃœrÃ¼n gÃ¼ncellenirken hata oluÅŸtu: $e');
    }
  }

  // ğŸ”¹ BARKODLA ÃœRÃœN BULMA
  Urun? barkodlaUrunBul(String barkod) {
    try {
      return _urunler.firstWhere(
        (urun) => urun.barkod == barkod,
        orElse: () => throw Exception('ÃœrÃ¼n bulunamadÄ±!'),
      );
    } catch (e) {
      throw Exception('ÃœrÃ¼n bulunurken hata oluÅŸtu: $e');
    }
  }

  // ğŸ”¹ STOK DURUMUNA GÃ–RE FÄ°LTRELEME
  List<Urun> stokDurumunaGoreFiltrele(int minStok) {
    try {
      return _urunler.where((urun) => urun.stok >= minStok).toList();
    } catch (e) {
      throw Exception('Filtreleme sÄ±rasÄ±nda hata oluÅŸtu: $e');
    }
  }
}